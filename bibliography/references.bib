


@misc{giese_warum_2002,
	title = {Warum explodierten Mariner 1, Ariane 5, ... oder: Was kümmern mich die Probleme der Datenverarbeitung},
	url = {https://web-docs.gsi.de/~giese/swr/},
	author = {Giese, Ingolf},
	month = feb,
	year = {2002}
}

@book{thaller_software-test:_2002,
	address = {Hannover},
	edition = {Auflage: 2., aktualis. u. erw. Aufl.},
	title = {Software-Test: Verifikation und Validation},
	isbn = {9783882291988},
	shorttitle = {Software-Test},
	language = {Deutsch},
	publisher = {Heise, H},
	author = {Thaller, Georg E.},
	month = apr,
	year = {2002}
}

@book{vigenschow_objektorientiertes_2004,
	address = {Heidelberg},
	edition = {Auflage: 1., Aufl.},
	title = {Objektorientiertes Testen und Testautomatisierung in der Praxis: Konzepte, Techniken und Verfahren},
	isbn = {9783898643054},
	shorttitle = {Objektorientiertes Testen und Testautomatisierung in der Praxis},
	abstract = {Objektorientierte Software mit ihren spezifischen Fehlerquellen hat die Herausforderungen an die Softwareentwicklung erhöht. Wie können effizient qualitativ gute Programme geschrieben werden? Die Antwort darauf ist heutzutage ein modernes, testgetriebenes Design. Doch wie erreicht man eine minimale Anzahl von Testfällen, die ein Maximum der Fehlermöglichkeiten abdecken? Wie findet man aussagekräftige Testdaten? Wie kann bereits innerhalb der Softwareentwicklung automatisiert getestet werden? Das Buch stellt auf pragmatische Weise klassische und moderne Testtheorien und -verfahren vor. Dabei werden Lösungen für technische, analytische und methodische Probleme sowie zum Test von objektorientierter Software aufgezeigt. Auch auf organisatorische Faktoren und Teststrategien wird eingegangen. Die Umsetzung in der Praxis kann anhand von konkreten Beipielen für {JUnit}, {CppUnit} und {NUnit} nachvollzogen werden. Weiter wird gezeigt, wie der Einsatz von Testmustern den Test von objektorientierter Software erleichtern kann. Da im Zusammenhang mit Objektorientierung die {UML} als Modellierungssprache immer stärker in den Mittelpunkt rückt, wird exemplarisch dargestellt, wie {UML}-Diagramme im Rahmen eines inkrementell-iterativen Entwicklungsprozesses für die Testfall-Findung genutzt werden. Zusätzlich werden Lösungen für die Probleme beim Einsatz der {UML} durch den Versionswechsel von {UML} 1.* zu 2.0 vorgestellt. Neben der Objektorientierung und der Testautomatisierung liegt ein weiterer Schwerpunkt auf Realtime- und Embedded Systems mit ihren besonderen Anforderungen, u.a. wird der Aspekt der Robustheit behandelt. Auf der Buch-Website www.oo-testen.de finden sich der Sourcode der Beispiele und weitere hilfreiche Informationen zum Thema.},
	language = {Deutsch},
	publisher = {"dpunkt.verlag {GmbH}"},
	author = {Vigenschow, Uwe},
	month = sep,
	year = {2004}
}

% ----------------------------------------------------------
% This file was created with JabRef 2.7b.
% Encoding: ISO8859_1

@INBOOK{fankhauser:2009:softwaretechnik-security,
  chapter = {13},
  pages = {589--646},
  title = {Softwaretechnik - Mit Fallbeispielen aus realen Entwicklungsprojekten},
  publisher = {Pearson Studium},
  year = {2009},
  author = {Fankhauser, Florian and Schanes, Christian and Brem, Christian},
  address = {M{\"u}nchen},
  edition = {1},
  bibsource = {esse},
  url = {http://www.inso.tuwien.ac.at/publications/softwaretechnik/}
}

@OTHER{oasis:2010:homepage,
  author = {Oasis},
  lastchecked = {26.11.2011},
  title = {Organization for the advancement of structured information standards},
  url = {http://www.oasis-open.org},
  year = {2010}
}

@ARTICLE{schanes:2011:voip-fuzzer,
  author = {Schanes, Christian and Taber, Stefan and Popp, Karin and Fankhauser,
	Florian and Grechenig, Thomas},
  title = {Security Test Approach for Automated Detection of Vulnerabilities
	of SIP-based VoIP Softphones},
  journal = {International Journal On Advances in Security},
  year = {2011},
  volume = {4},
  pages = {95--105},
  number = {1 and 2},
  month = sep,
  abstract = {Voice over Internet Protocol based systems replace phone lines in
	many scenarios and are in wide use today. Automated security tests
	of such systems are required to detect implementation and configuration
	mistakes early and in an efficient way. In this paper we present
	a plugin for our fuzzer framework fuzzolution to automatically detect
	security vulnerabilities in Session Initiation Protocol based Voice
	over Internet Protocol softphones, which are examples for endpoints
	in such telephone systems. The presented approach automates the interaction
	with the Graphical User Interface of the softphones during test execution
	and also observes the behavior of the softphones using multiple metrics.
	Results of testing two open source softphones by using our fuzzer
	showed that various unknown vulnerabilities could be identified with
	the implemented plugin for our fuzzing framework.},
  bibsource = {esse},
  booktitle = {International Journal On Advances in Security, volume 4, numbers
	1 and 2, 2011},
  keywords = {ESSE, Software testing; Computer network security; Graphical user
	interfaces; Internet telephony; Fuzzing},
  publisher = {IEEE Computer Society Press},
  url = {\url{http://www.iariajournals.org/security/tocv4n12.html}}
}